# Generated by Django 3.1.5 on 2023-07-17 19:09

from django.db import migrations, models
import django.db.models.deletion
import lessons.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('name', models.CharField(max_length=70, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PairsQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lessons.question')),
                ('mixed', models.BooleanField(default=False)),
                ('word_pairs', models.JSONField(validators=[lessons.models.validate_word_pairs_JSON])),
            ],
            bases=('lessons.question',),
        ),
        migrations.CreateModel(
            name='SentenceMCQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lessons.question')),
                ('correct_answer', models.CharField(max_length=700)),
                ('incorrect_answer_options', models.JSONField(validators=[lessons.models.validate_mc_JSON])),
                ('native_language_sentence', models.CharField(max_length=700)),
            ],
            bases=('lessons.question',),
        ),
        migrations.CreateModel(
            name='TranslatePickWordsQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lessons.question')),
                ('native_language_sentence', models.CharField(max_length=150)),
                ('correct_answer', models.CharField(max_length=150)),
                ('incorrect_words', models.JSONField(validators=[lessons.models.validate_pick_words_JSON])),
            ],
            bases=('lessons.question',),
        ),
        migrations.CreateModel(
            name='WriteSentenceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lessons.question')),
                ('native_language_sentence', models.CharField(max_length=150)),
                ('correct_answer', models.CharField(max_length=150)),
            ],
            bases=('lessons.question',),
        ),
        migrations.CreateModel(
            name='VocabWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_language_word', models.CharField(max_length=200)),
                ('native_language_word', models.CharField(max_length=200)),
                ('subjects', models.ManyToManyField(to='lessons.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_name', models.CharField(max_length=80, unique=True)),
                ('questions', models.ManyToManyField(to='lessons.Question')),
                ('subjects', models.ManyToManyField(to='lessons.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='VocabMCQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lessons.question')),
                ('incorrect_answer_options', models.ManyToManyField(related_name='question_this_is_incorrect_option_for', to='lessons.VocabWord')),
                ('vocab_word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_this_is_correct_answer_for', to='lessons.vocabword')),
            ],
            bases=('lessons.question',),
        ),
    ]
